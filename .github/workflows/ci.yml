name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Type check
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format:check

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ["20.19.0", "22.19.0", "24.3.0"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        run: pnpm build

      - name: Unit tests with coverage
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '22.19.0'
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/cli/coverage/lcov.info
          fail_ci_if_error: false

      # Upload coverage to Coveralls for badge
      - name: Upload coverage to Coveralls
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '22.19.0'
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./apps/cli/coverage/lcov.info

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Build
        run: pnpm build

      - name: Test CLI binary
        run: |
          node apps/cli/bin/pcu.js --version
          node apps/cli/bin/pcu.js --help

      # Skip npm compatibility test as workspace dependencies are not compatible with npm
      # The CLI is designed to work within pnpm workspaces
      - name: Test CLI package creation
        run: |
          cd apps/cli
          # Verify package can be created
          npm pack --dry-run
          echo "âœ… CLI package creation test passed"

      - name: Package CLI for npm
        run: cd apps/cli && npm pack

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            apps/cli/dist/
            apps/cli/bin/
            apps/cli/*.tgz
          retention-days: 7
